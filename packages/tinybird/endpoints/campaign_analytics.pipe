VERSION 1

TOKEN read_only

NODE goal_events
DESCRIPTION "Aggregate events by goal_id - goal configuration fetched from backend"
SQL >
    SELECT
        e.campaign_id,
        e.goal_id,
        e.ab_test_variant_id,
        count(DISTINCT e.session_id) as unique_sessions,
        count(*) as total_events,
        avg(e.time_on_page) as avg_time_on_page,
        max(e.scroll_depth) as max_scroll_depth,
        
        # Goal-specific aggregations
        countIf(e.goal_id = 'form-submission' AND e.form_id IS NOT NULL) as form_submissions,
        countIf(e.goal_id = 'click-through-rate' AND e.clicked_url IS NOT NULL) as link_clicks,
        countIf(e.goal_id = 'page-view') as page_views,
        
        # Scroll depth metrics for scroll goals
        countIf(e.goal_id = 'scroll-threshold-25' AND e.scroll_depth >= 25) as scroll_25_achieved,
        countIf(e.goal_id = 'scroll-threshold-50' AND e.scroll_depth >= 50) as scroll_50_achieved,
        countIf(e.goal_id = 'scroll-threshold-75' AND e.scroll_depth >= 75) as scroll_75_achieved,
        countIf(e.goal_id = 'scroll-threshold-100' AND e.scroll_depth = 100) as scroll_100_achieved,
        
        # Session enrichment from session data
        count(DISTINCT s.utm_source) as traffic_sources,
        count(DISTINCT s.country) as countries,
        countIf(s.is_mobile = 1) as mobile_sessions,
        countIf(s.is_returning = 1) as returning_sessions,
        countIf(s.is_bot = 0) as human_sessions,
        
        # Performance metrics
        avg(e.page_load_time) as avg_page_load_time,
        avg(e.dom_ready_time) as avg_dom_ready_time,
        
        toStartOfHour(e.timestamp) as hour
    FROM events_v1 e
    INNER JOIN session_v1 s ON e.session_id = s.session_id
    WHERE
        e.workspace_id = {{ String(workspace_id, required=True) }}
        AND e.project_id = {{ String(project_id, required=True) }}
        AND e.campaign_id = {{ String(campaign_id, required=True) }}
        {% if defined(start_date) %}
            AND e.timestamp >= {{ DateTime(start_date) }}
        {% endif %}
        {% if defined(end_date) %}
            AND e.timestamp <= {{ DateTime(end_date) }}
        {% endif %}
        {% if defined(ab_test_id) %}
            AND e.ab_test_id = {{ String(ab_test_id) }}
        {% endif %}
        {% if defined(goal_id) %}
            AND e.goal_id = {{ String(goal_id) }}
        {% endif %}
    GROUP BY
        e.campaign_id,
        e.goal_id,
        e.ab_test_variant_id,
        hour
    ORDER BY hour DESC

NODE calculate_metrics
DESCRIPTION "Calculate bounce rate and engagement metrics"
SQL >
    SELECT
        *,
        # Bounce rate: sessions that viewed only one page
        CASE 
            WHEN goal_id = 'bounce-rate' THEN 
                (unique_sessions - returning_sessions) / unique_sessions
            ELSE 0
        END as bounce_rate,
        
        # Engagement rate based on time on page and scroll depth
        CASE
            WHEN goal_id = 'engagement-rate' THEN
                CASE
                    WHEN avg_time_on_page > 30 OR max_scroll_depth > 50 THEN 1
                    ELSE 0
                END
            ELSE 0
        END as engagement_rate,
        
        # Mobile rate
        mobile_sessions / unique_sessions as mobile_rate,
        
        # Conversion rate (goal achievements / sessions)
        total_events / unique_sessions as achievement_rate
    FROM goal_events