TOKEN read_write READ
TOKEN read_only READ

NODE params
DESCRIPTION "Parameters for realtime overview (default: last 30 minutes)"

SQL >
    %
    SELECT
        {{ String(workspaceId, required=True) }} AS workspace_id,
        {{ String(projectId, required=True) }} AS project_id,
        {{ String(campaignId, required=True) }} AS campaign_id,
        {{ String(environment, required=True) }} AS environment,
        {{ String(campaignEnvironment, required=True) }} AS campaign_environment,
        {{ String(conversionEventId, required=True) }} AS conversion_event_id,
        {% if lookbackMinutes %} {{ Int32(lookbackMinutes) }} {% else %} toInt32(30) {% end %} AS lookback_minutes

NODE recent_sessions
DESCRIPTION "Sessions started/active in lookback window"

SQL >
    %
    SELECT session_id, timestamp, country, device_type, landing_page_id, utm_source, ref, source
    FROM session_v1
    WHERE workspace_id = (SELECT workspace_id FROM params)
      AND project_id = (SELECT project_id FROM params)
      AND campaign_id = (SELECT campaign_id FROM params)
      AND environment = (SELECT environment FROM params)
      AND campaign_environment = (SELECT campaign_environment FROM params)
      AND timestamp >= now() - toIntervalMinute((SELECT lookback_minutes FROM params))

NODE recent_events
DESCRIPTION "Events in lookback window"

SQL >
    %
    SELECT timestamp, event_id, session_id, event_value, event_value_currency, event_type
    FROM events_v1
    WHERE workspace_id = (SELECT workspace_id FROM params)
      AND project_id = (SELECT project_id FROM params)
      AND campaign_id = (SELECT campaign_id FROM params)
      AND environment = (SELECT environment FROM params)
      AND campaign_environment = (SELECT campaign_environment FROM params)
      AND timestamp >= now() - toIntervalMinute((SELECT lookback_minutes FROM params))

NODE aggregates
DESCRIPTION "Active sessions, events, conversions, countries, devices with fixed priority"

SQL >
    %
    WITH active AS (
      SELECT uniqExact(session_id) AS active_sessions FROM recent_sessions
    ),
    ev AS (
      SELECT countIf(event_type != 'system') AS events FROM recent_events
    ),
    conversions AS (
      SELECT
        countIf(event_id = (SELECT conversion_event_id FROM params)) AS conversion_count,
        sumIf(event_value, event_id = (SELECT conversion_event_id FROM params) AND event_value_currency = 'USD') AS conversion_value
      FROM recent_events
    ),
    countries AS (
      SELECT groupArray(tuple(country, count)) AS countries
      FROM (
        SELECT country, uniqExact(session_id) AS count
        FROM recent_sessions
        WHERE country IS NOT NULL AND country != ''
        GROUP BY country
        ORDER BY count DESC
      )
    ),
    devices AS (
      SELECT groupArray(tuple(device_type, count)) AS devices
      FROM (
        SELECT device_type, uniqExact(session_id) AS count
        FROM recent_sessions
        WHERE device_type IS NOT NULL AND device_type != ''
        GROUP BY device_type
        ORDER BY count DESC
      )
    ),
    top_pages AS (
      SELECT groupArray(tuple(landing_page_id, count)) AS top_landing_pages
      FROM (
        SELECT landing_page_id, uniqExact(session_id) AS count
        FROM recent_sessions
        WHERE landing_page_id IS NOT NULL
        GROUP BY landing_page_id
        ORDER BY count DESC
        LIMIT 5
      )
    ),
    traffic_sources AS (
      SELECT groupArray(tuple(source, count)) AS sources
      FROM (
        SELECT
          CASE
            WHEN source IS NOT NULL AND source != '' THEN source
            WHEN ref IS NOT NULL AND ref != '' THEN ref
            WHEN utm_source IS NOT NULL AND utm_source != '' THEN utm_source
            ELSE 'Direct'
          END AS source,
          uniqExact(session_id) AS count
        FROM recent_sessions
        GROUP BY source
        ORDER BY count DESC
      )
    ),
    top_events AS (
      SELECT groupArray(tuple(event_id, count)) AS top_events
      FROM (
        SELECT event_id, count(*) AS count
        FROM recent_events
        WHERE event_type != 'system'
        GROUP BY event_id
        ORDER BY count DESC
        LIMIT 5
      )
    )
    SELECT (SELECT active_sessions FROM active) AS active_sessions,
           (SELECT events FROM ev) AS events,
           (SELECT conversion_count FROM conversions) AS conversions,
           (SELECT conversion_value FROM conversions) AS conversion_value,
           (SELECT countries FROM countries) AS countries,
           (SELECT devices FROM devices) AS devices,
           (SELECT top_landing_pages FROM top_pages) AS top_landing_pages,
           (SELECT sources FROM traffic_sources) AS traffic_sources,
           (SELECT top_events FROM top_events) AS top_events

TYPE ENDPOINT

