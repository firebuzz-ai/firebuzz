TOKEN read_write READ
TOKEN read_only READ

NODE sessions_overview
DESCRIPTION "Overview of sessions for a workspace/project with optional filters"

SQL >
    %
    SELECT
        count(DISTINCT session_id) AS total_sessions,
        count(DISTINCT user_id) AS unique_users,
        count(DISTINCT attribution_id) AS unique_visitors,
        countIf(is_returning = 1) AS returning_visitors,
        countIf(is_returning = 0) AS new_visitors,
        countIf(is_bot = 1) AS bot_sessions,
        countIf(is_mobile = 1) AS mobile_sessions,
        countIf(is_mobile = 0) AS desktop_sessions,
        avg(screen_width) AS avg_screen_width,
        avg(screen_height) AS avg_screen_height
    FROM session_v1
    WHERE
        workspace_id = {{ String(workspaceId, required=True) }}
        {% if projectId %} AND project_id = {{ String(projectId) }} {% end %}
        {% if campaignId %} AND campaign_id = {{ String(campaignId) }} {% end %}
        {% if periodStart %} AND timestamp >= {{ DateTime64(periodStart) }} {% end %}
        {% if periodEnd %} AND timestamp <= {{ DateTime64(periodEnd) }} {% end %}

NODE device_breakdown
DESCRIPTION "Breakdown of sessions by device type and OS"

SQL >
    %
    SELECT
        device_type,
        device_os,
        browser,
        count(*) AS session_count,
        round(count(*) * 100.0 / sum(count(*)) OVER (), 2) AS percentage
    FROM session_v1
    WHERE
        workspace_id = {{ String(workspaceId, required=True) }}
        {% if projectId %} AND project_id = {{ String(projectId) }} {% end %}
        {% if campaignId %} AND campaign_id = {{ String(campaignId) }} {% end %}
        {% if periodStart %} AND timestamp >= {{ DateTime64(periodStart) }} {% end %}
        {% if periodEnd %} AND timestamp <= {{ DateTime64(periodEnd) }} {% end %}
    GROUP BY device_type, device_os, browser
    ORDER BY session_count DESC

NODE geographic_distribution
DESCRIPTION "Geographic distribution of sessions"

SQL >
    %
    SELECT
        country,
        city,
        continent,
        count(*) AS session_count,
        countIf(is_returning = 1) AS returning_count,
        countIf(is_eu_country = 1) AS eu_sessions,
        round(count(*) * 100.0 / sum(count(*)) OVER (), 2) AS percentage
    FROM session_v1
    WHERE
        workspace_id = {{ String(workspaceId, required=True) }}
        {% if projectId %} AND project_id = {{ String(projectId) }} {% end %}
        {% if campaignId %} AND campaign_id = {{ String(campaignId) }} {% end %}
        {% if periodStart %} AND timestamp >= {{ DateTime64(periodStart) }} {% end %}
        {% if periodEnd %} AND timestamp <= {{ DateTime64(periodEnd) }} {% end %}
    GROUP BY country, city, continent
    ORDER BY session_count DESC
    LIMIT 100

NODE utm_performance
DESCRIPTION "Performance breakdown by UTM parameters"

SQL >
    %
    SELECT
        utm_source,
        utm_medium,
        utm_campaign,
        count(DISTINCT session_id) AS sessions,
        count(DISTINCT user_id) AS unique_users,
        count(DISTINCT attribution_id) AS unique_visitors,
        countIf(is_returning = 1) AS returning_visitors,
        round(countIf(is_returning = 1) * 100.0 / count(*), 2) AS return_rate
    FROM session_v1
    WHERE
        workspace_id = {{ String(workspaceId, required=True) }}
        {% if projectId %} AND project_id = {{ String(projectId) }} {% end %}
        {% if campaignId %} AND campaign_id = {{ String(campaignId) }} {% end %}
        {% if periodStart %} AND timestamp >= {{ DateTime64(periodStart) }} {% end %}
        {% if periodEnd %} AND timestamp <= {{ DateTime64(periodEnd) }} {% end %}
        AND utm_source IS NOT NULL
    GROUP BY utm_source, utm_medium, utm_campaign
    ORDER BY sessions DESC

NODE ab_test_performance
DESCRIPTION "Performance of AB test variants"

SQL >
    %
    SELECT
        ab_test_id,
        ab_test_variant_id,
        count(*) AS session_count,
        countIf(is_returning = 1) AS returning_sessions,
        round(count(*) * 100.0 / sum(count(*)) OVER (PARTITION BY ab_test_id), 2) AS variant_percentage
    FROM session_v1
    WHERE
        workspace_id = {{ String(workspaceId, required=True) }}
        {% if projectId %} AND project_id = {{ String(projectId) }} {% end %}
        {% if campaignId %} AND campaign_id = {{ String(campaignId) }} {% end %}
        {% if periodStart %} AND timestamp >= {{ DateTime64(periodStart) }} {% end %}
        {% if periodEnd %} AND timestamp <= {{ DateTime64(periodEnd) }} {% end %}
        AND ab_test_id IS NOT NULL
    GROUP BY ab_test_id, ab_test_variant_id
    ORDER BY ab_test_id, session_count DESC

NODE hourly_distribution
DESCRIPTION "Session distribution by hour of day"

SQL >
    %
    SELECT
        toHour(timestamp) AS hour,
        count(*) AS session_count,
        countIf(is_mobile = 1) AS mobile_sessions,
        countIf(is_mobile = 0) AS desktop_sessions
    FROM session_v1
    WHERE
        workspace_id = {{ String(workspaceId, required=True) }}
        {% if projectId %} AND project_id = {{ String(projectId) }} {% end %}
        {% if campaignId %} AND campaign_id = {{ String(campaignId) }} {% end %}
        {% if periodStart %} AND timestamp >= {{ DateTime64(periodStart) }} {% end %}
        {% if periodEnd %} AND timestamp <= {{ DateTime64(periodEnd) }} {% end %}
    GROUP BY hour
    ORDER BY hour

NODE referrer_analysis
DESCRIPTION "Top referrers driving traffic"

SQL >
    %
    SELECT
        referrer,
        count(*) AS session_count,
        count(DISTINCT attribution_id) AS unique_visitors,
        countIf(is_returning = 1) AS returning_visitors,
        round(countIf(is_returning = 1) * 100.0 / count(*), 2) AS return_rate
    FROM session_v1
    WHERE
        workspace_id = {{ String(workspaceId, required=True) }}
        {% if projectId %} AND project_id = {{ String(projectId) }} {% end %}
        {% if campaignId %} AND campaign_id = {{ String(campaignId) }} {% end %}
        {% if periodStart %} AND timestamp >= {{ DateTime64(periodStart) }} {% end %}
        {% if periodEnd %} AND timestamp <= {{ DateTime64(periodEnd) }} {% end %}
        AND referrer IS NOT NULL
    GROUP BY referrer
    ORDER BY session_count DESC
    LIMIT 50

TYPE ENDPOINT